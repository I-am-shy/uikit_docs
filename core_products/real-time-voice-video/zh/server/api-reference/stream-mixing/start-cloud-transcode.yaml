openapi: 3.0.0
info:
  title: open-api-desc
  version: 1.0.0
  contact:
    name: Real-time Voice/Video API Support
    email: support@zegocloud.com

tags:
  - name: stream-mixing

servers:
  $ref: '../shared-components.yaml#/servers'

paths:
  /:
    post:
      tags:
        - stream-mixing
      summary: StartCloudTranscode
      description: 将指定的单路输入流输出为不同分辨率/码率/帧率的视频流。
      operationId: start-cloud-transcode
      parameters:
        - name: Action
          in: query
          description: |
            > 接口原型参数
            >
            > https://rtc-api.zego.im?Action=StartCloudTranscode
          required: true
          schema:
            type: string
            enum: [StartCloudTranscode]
          style: form
          explode: true
        # 公共参数（Query）
        - $ref: '../shared-components.yaml#/components/parameters/AppId'
        - $ref: '../shared-components.yaml#/components/parameters/SignatureNonce'
        - $ref: '../shared-components.yaml#/components/parameters/Timestamp'
        - $ref: '../shared-components.yaml#/components/parameters/Signature'
        - $ref: '../shared-components.yaml#/components/parameters/SignatureVersion'
        - $ref: '../shared-components.yaml#/components/parameters/IsTest'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartCloudTranscodeRequest'
      responses:
        "200":
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartCloudTranscodeResponse'

components:
  schemas:
    StartCloudTranscodeRequest:
      type: object
      required: [TaskId, UserId, TranscodeInput, TranscodeOutput]
      properties:
        TaskId: { type: string }
        UserId: { type: string }
        Sequence: { type: integer, format: int32 }
        TranscodeInput:
          type: object
          properties:
            StreamId: { type: string }
            StreamUrl: { type: string }
        TranscodeOutput:
          type: array
          items:
            type: object
            properties:
              StreamId: { type: string }
              StreamUrl: { type: string }
              TemplateId: { type: integer, format: int32, enum: [0,1,2,3,4] }
              TemplateConfig:
                type: object
                properties:
                  VideoEncId: { type: integer, format: int32, enum: [0,1,2] }
                  Fps: { type: integer, format: int32 }
                  GOP: { type: integer, format: int32 }
                  ShortEdgeAdaption: { type: integer, format: int32, enum: [0,1] }
                  Width: { type: integer, format: int32 }
                  Height: { type: integer, format: int32 }
                  VideoBitrate: { type: integer, format: int32 }
                  LowBitrateHD: { type: integer, format: int32, enum: [0,1] }
    StartCloudTranscodeResponse:
      type: object
      properties:
        Code: { type: integer, format: int32 }
        Message: { type: string }
        RequestId: { type: string }

