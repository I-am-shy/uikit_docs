openapi: 3.0.0
info:
  title: open-api-desc
  version: 1.0.0
  contact:
    name: Real-time Voice/Video API Support
    email: support@zegocloud.com

tags:
  - name: stream-mixing

servers:
  $ref: '../shared-components.yaml#/servers'

paths:
  /:
    post:
      tags:
        - stream-mixing
      summary: StartMix
      description: 开始/更新混流任务。
      operationId: start-mix
      parameters:
        - name: Action
          in: query
          description: |
            > 接口原型参数
            >
            > https://rtc-api.zego.im?Action=StartMix
          required: true
          schema:
            type: string
            enum: [StartMix]
          style: form
          explode: true
        # 公共参数（Query）
        - $ref: '../shared-components.yaml#/components/parameters/AppId'
        - $ref: '../shared-components.yaml#/components/parameters/SignatureNonce'
        - $ref: '../shared-components.yaml#/components/parameters/Timestamp'
        - $ref: '../shared-components.yaml#/components/parameters/Signature'
        - $ref: '../shared-components.yaml#/components/parameters/SignatureVersion'
        - $ref: '../shared-components.yaml#/components/parameters/IsTest'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartMixRequest'
      responses:
        "200":
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartMixResponse'

components:
  schemas:
    RectInfo:
      type: object
      properties:
        Top:
          type: integer
          format: int32
        Left:
          type: integer
          format: int32
        Bottom:
          type: integer
          format: int32
        Right:
          type: integer
          format: int32
    MixInput:
      type: object
      properties:
        StreamId:
          type: string
        StreamUrl:
          type: string
        RectInfo:
          $ref: '#/components/schemas/RectInfo'
        ContentControl:
          type: integer
          format: int32
          description: 内容控制。0 取音视频；1 取音频；2 取视频。
          enum: [0,1,2]
        SoundLevelId:
          type: integer
          format: int32
        Volume:
          type: integer
          format: int32
        RenderMode:
          type: integer
          format: int32
          enum: [0,1]
        UID:
          type: string
        Image:
          type: object
          properties:
            Url:
              type: string
            DisplayMode:
              type: integer
              format: int32
              enum: [0,1,2]
        Label:
          type: object
          properties:
            Text: { type: string }
            Left: { type: integer, format: int32 }
            Top: { type: integer, format: int32 }
            Font:
              type: object
              properties:
                FontType: { type: integer, format: int32 }
                FontSize: { type: integer, format: int32 }
                FontColor: { type: integer, format: int32 }
                Transparency: { type: integer, format: int32 }
                BorderColor: { type: integer, format: int32 }
    MixOutput:
      type: object
      properties:
        StreamId: { type: string }
        StreamUrl: { type: string }
        VideoBitrate: { type: integer, format: int32 }
        Fps: { type: integer, format: int32 }
        Width: { type: integer, format: int32 }
        Height: { type: integer, format: int32 }
        AudioCodec: { type: integer, format: int32 }
        AudioBitrate: { type: integer, format: int32 }
        SoundChannel: { type: integer, format: int32 }
        VideoEncId: { type: integer, format: int32 }
        ExtraLayers:
          type: array
          items:
            type: object
            properties:
              VideoBitrate: { type: integer, format: int32 }
        LowBitrateHD: { type: integer, format: int32 }
        TargetRoom:
          type: object
          properties:
            RoomId: { type: string }
            UserId: { type: string }
    StartMixRequest:
      type: object
      required: [TaskId, UserId, MixInput, MixOutput]
      properties:
        TaskId: { type: string }
        UserId: { type: string }
        Sequence: { type: integer, format: int32 }
        RoomId: { type: string }
        UserData: { type: string }
        SoundLevel: { type: integer, format: int32, enum: [0,1] }
        BackgroundImage: { type: string }
        BackGroundColorHex: { type: string }
        ByPass: { type: integer, format: int32, enum: [0,1] }
        SoundChannel: { type: string, enum: ["1","2"] }
        CheckImageMode: { type: integer, format: int32, enum: [0,1,2] }
        ExPara:
          type: array
          items:
            type: object
            properties:
              Key: { type: string }
              Value: { type: string }
        RecvBufferLevel: { type: integer, format: int32 }
        MixInput:
          type: array
          items: { $ref: '#/components/schemas/MixInput' }
        MixOutput:
          type: array
          items: { $ref: '#/components/schemas/MixOutput' }
    StartMixResponse:
      type: object
      properties:
        Code: { type: integer, format: int32 }
        Message: { type: string }
        RequestId: { type: string }
        Data:
          type: object
          properties:
            UserId: { type: string }
            Sequence: { type: integer, format: int32 }
            RoomId: { type: string }
            PlayInfo:
              type: array
              items:
                type: object
                properties:
                  StreamId: { type: string }
                  RTMP: { type: string }
                  HLS: { type: string }
                  FLV: { type: string }

