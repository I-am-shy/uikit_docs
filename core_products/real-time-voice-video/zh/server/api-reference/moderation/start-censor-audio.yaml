openapi: 3.0.0
info:
  title: open-api-desc
  version: 1.0.0
  contact: { name: Real-time Voice/Video API Support, email: support@zegocloud.com }

tags:
  - name: moderation

servers:
  $ref: '../shared-components.yaml#/servers'

paths:
  /:
    post:
      tags: [moderation]
      summary: StartCensorAudioV2
      description: 开始音频流审核。
      operationId: start-censor-audio
      parameters:
        - name: Action
          in: query
          required: true
          description: |
            > 接口原型参数
            >
            > https://rtc-api.zego.im?Action=StartCensorAudioV2
          schema: { type: string, enum: [StartCensorAudioV2] }
        - $ref: '../shared-components.yaml#/components/parameters/AppId'
        - $ref: '../shared-components.yaml#/components/parameters/SignatureNonce'
        - $ref: '../shared-components.yaml#/components/parameters/Timestamp'
        - $ref: '../shared-components.yaml#/components/parameters/Signature'
        - $ref: '../shared-components.yaml#/components/parameters/SignatureVersion'
        - $ref: '../shared-components.yaml#/components/parameters/IsTest'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartCensorAudioRequest'
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartCensorAudioResponse'

components:
  schemas:
    StartCensorAudioRequest:
      type: object
      required: [RoomId, EventId, AudioLanguage, RiskTypeList]
      properties:
        RoomId: { type: string }
        EventId: { type: string }
        ResultCallbackUrl: { type: string }
        StatusCallbackUrl: { type: string }
        IsMixingEnabled: { type: integer, format: int32, enum: [0,1], default: 0 }
        AudioLanguage: { type: string, enum: [zh,ja,ko,th,vi,ms,tl,id,hi,ar,tr,en,es,pt,it,fr,de,ru] }
        RiskTypeList:
          type: array
          items: { type: string }
          minItems: 1
        BusinessTypeList:
          type: array
          items: { type: string }
        LabelLanguage: { type: string, enum: [zh,en] }
        ReturnAllText: { type: integer, format: int32, enum: [0,1], default: 0 }
        ReturnPreText: { type: integer, format: int32, enum: [0,1], default: 0 }
        ReturnPreAudio: { type: integer, format: int32, enum: [0,1], default: 0 }
        ReturnFinishInfo: { type: integer, format: int32, enum: [0,1], default: 0 }
    StartCensorAudioResponse:
      type: object
      properties:
        Code: { type: integer, format: int32 }
        Message: { type: string }
        RequestId: { type: string }
        Data:
          type: object
          properties:
            TaskId: { type: string }

