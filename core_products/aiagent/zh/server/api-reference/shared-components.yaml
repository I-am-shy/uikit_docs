openapi: 3.0.0
info:
  title: AI Agent API - 共享组件
  version: 1.0.0

# 共享的服务器配置
servers:
  - url: https://aigc-aiagent-api.zegotech.cn
    description: 统一接入地址（不区分区域）
  - url: https://aigc-aiagent-api-sha.zegotech.cn
    description: 中国大陆（上海）
  - url: https://aigc-aiagent-api-hkg.zegotech.cn
    description: 港澳台（香港）
  - url: https://aigc-aiagent-api-fra.zegotech.cn
    description: 欧洲（法兰克福）
  - url: https://aigc-aiagent-api-lax.zegotech.cn
    description: 美西（加州）
  - url: https://aigc-aiagent-api-bom.zegotech.cn
    description: 亚太（孟买）
  - url: https://aigc-aiagent-api-sgp.zegotech.cn
    description: 东南亚（新加坡）

components:
  # 共享的参数定义
  parameters:
    # Re-export ZEGO global shared parameters for convenient local reference
    AppId:
      $ref: "../../../../../snippets/common/zh/openapi/zego-shared-components.yaml#/components/parameters/AppId"
    SignatureNonce:
      name: SignatureNonce
      in: query
      description: 💡公共参数。16 位 16 进制随机字符串（8 字节随机数的 hex 编码）。生成算法可参考 <a href="/aiagent-server/api-reference/accessing-server-apis#signature-example">签名示例</a>。
      required: true
      schema:
        type: string

    Timestamp:
      name: Timestamp
      in: query
      description: 💡公共参数。当前 Unix 时间戳，单位为秒。生成算法可参考 <a href="/aiagent-server/api-reference/accessing-server-apis#signature-example">签名示例</a>，最多允许 10 分钟的误差。
      required: true
      schema:
        type: integer
        format: int64
    SignatureVersion:
      $ref: "../../../../../snippets/common/zh/openapi/zego-shared-components.yaml#/components/parameters/SignatureVersion"
    Signature:
      name: Signature
      in: query
      description: 💡公共参数。签名，用于验证请求的合法性。请参考[签名机制](/aiagent-server/api-reference/accessing-server-apis#signature-mechanism)生成。
      required: true
      schema:
        type: string

  # 共享的Schema定义
  schemas:
    RTC:
      type: object
      description: |
        <div>
          <p>RTC 相关信息</p>
          <br/>
          <strong>📌 重要说明</strong>
          <p>所有属性字符限制：仅支持数字、英文字符、'_'、'-'、'.'。</p>
        </div>

      required:
        - RoomId
        - AgentStreamId
        - AgentUserId
        - UserStreamId
      properties:
        RoomId:
          type: string
          description: RTC 房间 ID。
          maxLength: 128
          example: "room_1"
        AgentStreamId:
          type: string
          description: |
            智能体实例推流使用的流 ID。
            > **📌 重要说明**
            >
            > 请确保当前运行中的多个智能体实例（即便不在同一个 RTC 房间）使用不同的流 ID，否则会导致后创建的智能体实例推流失败。
          maxLength: 128
          example: "agent_stream_1"
        AgentUserId:
          type: string
          description: |
            智能体实例的用户 ID。
            > **📌 重要说明**
            >
            > 需确保同时在运行中的多个智能体实例（即便不在同一个 RTC 房间）使用不同的用户 ID，否则先创建的智能体实例会被踢出 RTC 房间。
          maxLength: 32
          example: "agent_user_1"
        UserStreamId:
          type: string
          description: 真实用户推流使用的流 ID。
          maxLength: 128
          example: "user_stream_1"

    LLM:
      type: object
      required:
        - Url
        - Model
      properties:
        Url:
          type: string
          description: |
            接收请求的端点（可以是你自己的服务，也可以是任何 LLM 服务提供商提供的服务），并且必须兼容 [OpenAI Chat Completions API](https://platform.openai.com/docs/api-reference/chat)。

            例如：https://api.openai.com/v1/chat/completions

            > **📌 重要说明**
            >
            > 如果 ApiKey 设置为 "zego_test"，则必须使用以下 Url 地址之一：
            > - MiniMax：https://api.minimax.chat/v1/text/chatcompletion_v2
            > - 火山引擎（豆包）：https://ark.cn-beijing.volces.com/api/v3/chat/completions
            > - 阿里云百炼（通义千问）：https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
            > - 阶跃星辰：https://api.stepfun.com/v1/chat/completions

          example: "https://ark.cn-beijing.volces.com/api/v3/chat/completions"
        ApiKey:
          type: string
          description: |
            LLM 服务提供商用于认证的参数。默认为空，但在生产环境中必须提供。

            > **📌 重要说明**
            >
            > 在接入测试期间(AI Agent 服务开通 2 周内)，可以将该参数值设置为 "zego_test" 即可使用该服务。
          example: "zego_test"
        Model:
          type: string
          description: |
            LLM 模型。不同的 LLM 服务提供商支持不同的模型，请参考其官方文档选择合适的模型。

            > **📌 重要说明**
            >
            > 如果 ApiKey 设置为 "zego_test"，则必须使用以下模型之一：
            > - MiniMax：
            >   - *MiniMax-Text-01*
            > - 火山引擎（豆包）：
            >   - *doubao-1-5-pro-32k-250115*
            >   - *doubao-1-5-lite-32k-250115*
            > - 阿里云百炼（通义千问）：
            >   - *qwen-plus*
            > - 阶跃星辰：
            >   - *step-2-16k*
          example: "doubao-1-5-lite-32k-250115"
        SystemPrompt:
          type: string
          description: 智能体系统提示（prompt）。调用 LLM 时附加在最前的预定义信息，用于控制 LLM 输出。可以是角色设定、提示词和回答样例等。
          example: "你是一个友好的助手"
        Temperature:
          type: number
          description: 数值越高，输出越随机；数值越低，输出越集中和确定。
          minimum: 0
          maximum: 2
          default: 0.7
          example: 0.7
        TopP:
          type: number
          description: 采样方法，数值越小，确定性越强；数值越大，随机性越强。
          minimum: 0
          maximum: 1
          default: 0.9
          example: 0.9
        Params:
          type: object
          description: LLM 服务提供商支持的其他参数，如最大 Token 数量限制等。不同的 LLM 提供商支持不同的参数，请参考其官方文档并根据需要填写。
          example: {"max_tokens": 16384}
        AddAgentInfo:
          type: boolean
          description: |
            如果此值为 true，AI Agent 服务器在请求 LLM 服务时会在请求参数中包含智能体信息。
            您可以使用此参数在自定义 LLM 服务中执行额外的业务逻辑。

            agent_info 的结构如下：
            - room_id: 房间 ID
            - user_id: 用户 ID
            - agent_instance_id: 智能体实例 ID
          default: false
          example: false

    TTS:
      type: object
      required:
        - Vendor
        - Params
      properties:
        Vendor:
          type: string
          description: 语音合成（TTS）服务提供商。详细请参考[配置 TTS > TTS 参数说明](/aiagent-server/guides/configuring-tts##tts-params)
          enum: ["Aliyun", "ByteDance", "ByteDanceFlowing", "MiniMax", "CosyVoice"]
          example: "ByteDance"
        Params:
          type: object
          description: TTS 配置参数，格式为 JSON 对象。包含 app 参数（用于认证）和其他参数（用于调整 TTS 效果）。详细请参考[配置 TTS > Params 参数说明](/aiagent-server/guides/configuring-tts#params)
          required:
            - app
          properties:
            app:
              type: object
              description: 用于 TTS 服务鉴权，不同的 Vendor 值要求传入的 app 参数的结构不同，详细请参考[配置 TTS > Params 参数说明](/aiagent-server/guides/configuring-tts#params)
            other_params:
              type: string
              description: |

                > **📌 重要说明**
                >
                > other_params 不是一个有效参数，仅仅是为了说明如何透传厂商参数。
                > 除 app 参数外，其余参数均直接透传厂商参数。详细请参考[配置 TTS > Params 参数说明](/aiagent-server/guides/configuring-tts#params)
          example: {
            "app": {
              "appid": "zego_test",
              "token": "zego_test",
              "cluster": "volcano_tts"
            },
            "audio": {
              "voice_type": "zh_female_qingxinnvsheng_mars_bigtts",
              "loudness_ratio": 1.0,
              "speed_ratio": 1.0
            }
          }
        FilterText:
          type: array
          description: |
            从 LLM 返回的内容中过滤指定标点符号内的文本，然后再进行语音合成。

            注意：
            - 需要在 LLM > SystemPrompt 中定义哪些内容应该放在指定标点符号内
            - 此参数在更新智能体实例时无法更新
          items:
            type: object
            required:
              - BeginCharacters
              - EndCharacters
            properties:
              BeginCharacters:
                type: string
                description: 过滤文本的开始标点符号。例如，如果要过滤 () 中的内容，请设置为 (。
                example: "("
              EndCharacters:
                type: string
                description: 过滤文本的结束标点符号。例如，如果要过滤 () 中的内容，请设置为 )。
                example: ")"
          example: [
            {
              "BeginCharacters": "(",
              "EndCharacters": ")"
            }
          ]
        TerminatorText:
          type: string
          maxLength: 4
          example: "#-#"
          description: |
            可用于设置 TTS 的终止文本。若输入 TTS 的文本中出现匹配 TerminatorText 字符串的内容，则本轮 TTS 从 TerminatorText 字符串（包含）开始的内容将不再进行语音合成。
            > **📌 重要说明**
            >
            > 双向流式只能设置一个字符。

    ASR:
      type: object
      properties:
        Vendor:
          type: string
          description: ASR 厂商。可参考[配置 ASR](/aiagent-server/guides/configuring-asr) 参数说明。
          enum: [Tencent, AliyunParaformer, AliyunGummy, Microsoft]
          default: Tencent
          example: "Tencent"
        Params:
          type: object
          description: 厂商参数，具体使用方式参考[配置 ASR](/aiagent-server/guides/configuring-asr) 中的 Params 参数说明。
          example: {"engine_model_type": "16k_zh", "hotword_list": "zego|10"}
        VADSilenceSegmentation:
          type: number
          description: |
            用于设置用户说话停顿多少秒后，不再将两句话视为一句。
            单位为 ms，范围 [200，2000]，默认为 500。
            详细说明请参考[语音识别断句](/aiagent-server/advanced/speech-segmentation-control)。
          minimum: 200
          maximum: 2000
          default: 500
          example: 500
        PauseInterval:
          type: number
          description: |
            用于设置用户说话停顿多少秒内，将两句话视为一句，即 ASR 多句拼接。
            单位为 ms，范围 [200，2000]。
            仅当此值大于 VADSilenceSegmentation 时，才会启用 ASR 多句拼接。
            详细说明请参考[语音识别断句](/aiagent-server/advanced/speech-segmentation-control)。
          minimum: 200
          maximum: 2000
          example: 800
        HotWord:
          type: string
          deprecated: true
          description: 该参数已废弃。请通过 Params 厂商参数设置。

    MessageHistory:
      type: object
      description: 供智能体实例使用的历史消息的配置
      properties:
        SyncMode:
          type: integer
          description: |
            消息同步模式：
            - 0: 从即时通讯 (ZIM) 同步
            - 1: 通过 Messages 参数同步
          enum: [0, 1]
          default: 0
          example: 0
        Messages:
          type: array
          description: 消息列表
          maxItems: 100
          items:
            $ref: "#/components/schemas/Message"
        WindowSize:
          type: integer
          format: Int
          description: 每次调用 LLM 服务时使用的近期历史消息数量。影响 LLM 上下文理解能力，建议设置为 10-30。
          minimum: 0
          maximum: 200
          default: 20
          example: 20
        ZIM:
          $ref: "#/components/schemas/ZIM"

    Message:
      type: object
      required:
        - Role
        - Content
      properties:
        Role:
          type: string
          description: |
            消息发送者的角色
            - user: 用户
            - assistant: 智能体
          enum: [user, assistant]
          example: "user"
        Content:
          type: string
          description: 消息内容
          example: "你好，我想了解一下产品信息"

    ZIM:
      type: object
      description: |
        ZIM 相关信息。
        <div>
        <br/>
        <strong>📌 重要说明</strong>
        <p>- 仅当 MessageHistory.SyncMode 为 0 时有效。</p>
        <p>- 请确保您的项目已开通 ZIM 服务。</p>
        <p>- 请确保已调用 ZIM 机器人注册接口，并将返回的 UserInfo.UserId 作为 RobotId。</p>
        <p>- 建议您提前注册机器人，以便完善用户信息设置并提升智能体实例的创建效率。</p>
        </div>
      properties:
        RobotId:
          type: string
          description: ZIM 机器人 ID。即调用 ZIM [注册机器人](https://doc-zh.zego.im/zim-server/bot/register-bots#请求参数)接口对应的 UserInfo.UserId 。用于加载用户与该 ZIM 机器人的聊天上下文，并将对话过程中产生的消息同步至 ZIM。如果此参数为空，实时互动 AI Agent 后台将随机生成。
          example: "@RBT#robot_123"
        LoadMessageCount:
          type: integer
          description: 创建智能体实例时，从 ZIM 服务获取多少条消息作为上下文。默认为 WindowSize 的值（取值上限）。
          minimum: 0
          maximum: 200
          example: 20

    CallbackConfig:
      type: object
      description: |
        服务端回调配置

        <div>
        <br/>
        <strong>📌 重要说明</strong>
        <p>在配置以下参数前，你需要参考 [接收回调](/aiagent-server/callbacks/receiving-callback) 设置好回调地址，并了解具体字段说明。</p>
        </div>

      properties:
        ASRResult:
          type: integer
          description: 是否开启服务端回调 ASR 结果。
          enum: [0, 1]
          default: 0
        LLMResult:
          type: integer
          description: 是否开启服务端回调 LLM 结果。如果开启，则 ZEGO 服务端将会按照每句话返回 LLM 输出结果。
          enum: [0, 1]
          default: 0
        Interrupted:
          type: integer
          description: 是否开启服务端回调智能体被打断结果。
          enum: [0, 1]
          default: 0
        UserSpeakAction:
          type: integer
          description: 是否开启服务端回调用户说话的回调。
          enum: [0, 1]
          default: 0
        AgentSpeakAction:
          type: integer
          description: 是否开启服务端回调智能体说话的回调。
          enum: [0, 1]
          default: 0
        UserAudioData:
          type: integer
          description: 是否开启服务端回调用户说话音频数据。
          enum: [0, 1]
          default: 0

    AdvancedConfig:
      type: object
      properties:
        InterruptMode:
          type: integer
          description: |
            智能体说话时被用户语音打断的模式：
            - 0: 立即打断。如果在 AI 说话时用户说话，那么 AI 将被立刻打断，停止说话。
            - 1: 不打断。如果在 AI 说话时用户说话，那么 AI 不会被影响直到内容说完。
          enum: [0, 1]
          default: 0
          example: 0
        MaxIdleTime:
          type: integer
          description: 智能体实例的自动销毁时间。创建实例的用户（AgentUserId）若超过 MaxIdleTime 不在房间内，则后台自动删除智能体实例，并触发错误码为 1202 的异常回调事件。默认为 120s，取值范围 [10, 1800]。
          minimum: 10
          maximum: 1800
          default: 120
          example: 120

    DigitalHuman:
      type: object
      properties:
        DigitalHumanId:
          type: string
          description: 数字人形象 ID
          example: "xiaozhi"
        ConfigId:
          type: string
          description: 数字人配置 ID
          enum: [mobile, web]
          example: "mobile"
        EncodeCode:
          type: string
          description: 数字人视频编码格式
          enum: [H264, VP8]
          default: "H264"
          example: "H264"

    ErrorResponse:
      type: object
      properties:
        Code:
          type: integer
          description: 错误码
          example: 400
        Message:
          type: string
          description: 错误信息
          example: "Invalid request parameters"
        RequestId:
          type: string
          description: 请求 ID
          example: "3151527792559699733"